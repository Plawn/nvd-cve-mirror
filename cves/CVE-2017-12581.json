{
  "id": "CVE-2017-12581",
  "assigner": "cve@mitre.org",
  "Published": "2017-08-06T00:29:00.227Z",
  "Modified": "2017-08-14T10:04:27.033Z",
  "last-modified": "2017-08-14T10:04:27.033Z",
  "summary": "GitHub Electron before 1.6.8 allows remote command execution because of a nodeIntegration bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a chrome-devtools://devtools/bundled/inspector.html window could be used to eval a Node.js child_process.execFile API call.",
  "access": {
    "authentication": "NONE",
    "complexity": "MEDIUM",
    "vector": "NETWORK"
  },
  "impact": {
    "availability": "COMPLETE",
    "confidentiality": "COMPLETE",
    "integrity": "COMPLETE"
  },
  "cvss": 9.3,
  "exploitabilityScore": 8.6,
  "impactScore": 10.0,
  "cvss-vector": "AV:N/AC:M/Au:N/C:C/I:C/A:C",
  "references": [
    "https://blog.doyensec.com/2017/08/03/electron-framework-security.html",
    "https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf"
  ],
  "vulnerable_configuration": [],
  "vulnerable_product": [],
  "vendors": [],
  "products": [],
  "vulnerable_product_stems": [],
  "vulnerable_configuration_stems": [],
  "cwe": "CWE-78",
  "vulnerable_configuration_cpe_2_2": []
}