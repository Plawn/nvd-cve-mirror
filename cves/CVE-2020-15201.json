{
  "id": "CVE-2020-15201",
  "assigner": "security-advisories@github.com",
  "Published": "2020-09-25T17:15:15.353Z",
  "Modified": "2021-11-18T16:24:50.06Z",
  "last-modified": "2021-11-18T16:24:50.06Z",
  "summary": "In Tensorflow before version 2.3.1, the `RaggedCountSparseOutput` implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the `splits` tensor generate a valid partitioning of the `values` tensor. Hence, the code is prone to heap buffer overflow. If `split_values` does not end with a value at least `num_values` then the `while` loop condition will trigger a read outside of the bounds of `split_values` once `batch_idx` grows too large. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.",
  "access": {
    "authentication": "NONE",
    "complexity": "MEDIUM",
    "vector": "NETWORK"
  },
  "impact": {
    "availability": "PARTIAL",
    "confidentiality": "PARTIAL",
    "integrity": "PARTIAL"
  },
  "cvss": 6.8,
  "exploitabilityScore": 8.6,
  "impactScore": 6.4,
  "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "references": [
    "https://github.com/tensorflow/tensorflow/commit/3cbb917b4714766030b28eba9fb41bb97ce9ee02",
    "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",
    "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p5f8-gfw5-33w4"
  ],
  "vulnerable_configuration": [],
  "vulnerable_product": [],
  "vendors": [],
  "products": [],
  "vulnerable_product_stems": [],
  "vulnerable_configuration_stems": [],
  "cwe": "CWE-787",
  "vulnerable_configuration_cpe_2_2": []
}