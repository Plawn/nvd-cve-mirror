{
  "id": "CVE-2020-15214",
  "assigner": "security-advisories@github.com",
  "Published": "2020-09-25T17:15:16.713Z",
  "Modified": "2021-08-17T11:21:32.277Z",
  "last-modified": "2021-08-17T11:21:32.277Z",
  "summary": "In TensorFlow Lite before versions 2.2.1 and 2.3.1, models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor. This results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array. This usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits. The issue is patched in commit 204945b19e44b57906c9344c0d00120eeeae178a and is released in TensorFlow versions 2.2.1, or 2.3.1. A potential workaround would be to add a custom `Verifier` to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model. A similar validation could be done if the segment ids are generated at runtime between inference steps. If the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.",
  "access": {
    "authentication": "NONE",
    "complexity": "MEDIUM",
    "vector": "NETWORK"
  },
  "impact": {
    "availability": "PARTIAL",
    "confidentiality": "PARTIAL",
    "integrity": "PARTIAL"
  },
  "cvss": 6.8,
  "exploitabilityScore": 8.6,
  "impactScore": 6.4,
  "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
  "references": [
    "https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a",
    "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",
    "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm"
  ],
  "vulnerable_configuration": [
    "cpe:2.3:a:google:tensorflow:2.2.0:-:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc0:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc1:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc2:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc3:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc4:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:-:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:rc0:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:rc1:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:rc2:*:*:lite:*:*:*"
  ],
  "vulnerable_product": [
    "cpe:2.3:a:google:tensorflow:2.2.0:-:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc0:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc1:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc2:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc3:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.2.0:rc4:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:-:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:rc0:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:rc1:*:*:lite:*:*:*",
    "cpe:2.3:a:google:tensorflow:2.3.0:rc2:*:*:lite:*:*:*"
  ],
  "vendors": [
    "google"
  ],
  "products": [
    "tensorflow"
  ],
  "vulnerable_product_stems": [
    "cpe:2.3:a:google:tensorflow"
  ],
  "vulnerable_configuration_stems": [
    "cpe:2.3:a:google:tensorflow"
  ],
  "cwe": "CWE-787",
  "vulnerable_configuration_cpe_2_2": []
}