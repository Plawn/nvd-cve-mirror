{
  "id": "CVE-2021-32685",
  "assigner": "security-advisories@github.com",
  "Published": "2021-06-15T23:15:06.93Z",
  "Modified": "2021-06-23T18:09:12.343Z",
  "last-modified": "2021-06-23T18:09:12.343Z",
  "summary": "tEnvoy contains the PGP, NaCl, and PBKDF2 in node.js and the browser (hashing, random, encryption, decryption, signatures, conversions), used by TogaTech.org. In versions prior to 7.0.3, the `verifyWithMessage` method of `tEnvoyNaClSigningKey` always returns `true` for any signature that has a SHA-512 hash matching the SHA-512 hash of the message even if the signature was invalid. This issue is patched in version 7.0.3. As a workaround: In `tenvoy.js` under the `verifyWithMessage` method definition within the `tEnvoyNaClSigningKey` class, ensure that the return statement call to `this.verify` ends in `.verified`.",
  "access": {
    "authentication": "NONE",
    "complexity": "LOW",
    "vector": "NETWORK"
  },
  "impact": {
    "availability": "PARTIAL",
    "confidentiality": "PARTIAL",
    "integrity": "PARTIAL"
  },
  "cvss": 7.5,
  "exploitabilityScore": 10.0,
  "impactScore": 6.4,
  "cvss-vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
  "references": [
    "https://github.com/TogaTech/tEnvoy/commit/a121b34a45e289d775c62e58841522891dee686b",
    "https://github.com/TogaTech/tEnvoy/releases/tag/v7.0.3",
    "https://github.com/TogaTech/tEnvoy/security/advisories/GHSA-7r96-8g3x-g36m"
  ],
  "vulnerable_configuration": [
    "cpe:2.3:a:togatech:tenvoy:-:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:0.6.3:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.0.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.0.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.1.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.1.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.2:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.3:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.4:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.5:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.6:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:7.0.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:7.0.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:7.0.2:*:*:*:*:node.js:*:*"
  ],
  "vulnerable_product": [
    "cpe:2.3:a:togatech:tenvoy:-:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:0.6.3:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.0.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.0.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.1.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:5.1.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.2:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.3:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.4:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.5:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:6.0.6:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:7.0.0:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:7.0.1:*:*:*:*:node.js:*:*",
    "cpe:2.3:a:togatech:tenvoy:7.0.2:*:*:*:*:node.js:*:*"
  ],
  "vendors": [
    "togatech"
  ],
  "products": [
    "tenvoy"
  ],
  "vulnerable_product_stems": [
    "cpe:2.3:a:togatech:tenvoy"
  ],
  "vulnerable_configuration_stems": [
    "cpe:2.3:a:togatech:tenvoy"
  ],
  "cwe": "CWE-347",
  "vulnerable_configuration_cpe_2_2": []
}