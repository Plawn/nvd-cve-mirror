{
  "id": "CVE-2022-29245",
  "assigner": "security-advisories@github.com",
  "Published": "2022-05-31T15:15:07.837Z",
  "Modified": "2022-06-14T20:39:27.39Z",
  "last-modified": "2022-06-14T20:39:27.39Z",
  "summary": "SSH.NET is a Secure Shell (SSH) library for .NET. In versions 2020.0.0 and 2020.0.1, during an `X25519` key exchange, the clientâ€™s private key is generated with `System.Random`. `System.Random` is not a cryptographically secure random number generator, it must therefore not be used for cryptographic purposes. When establishing an SSH connection to a remote host, during the X25519 key exchange, the private key is generated with a weak random number generator whose seed can be brute forced. This allows an attacker who is able to eavesdrop on the communications to decrypt them. Version 2020.0.2 contains a patch for this issue. As a workaround, one may disable support for `curve25519-sha256` and `curve25519-sha256@libssh.org` key exchange algorithms.",
  "access": {
    "authentication": "NONE",
    "complexity": "MEDIUM",
    "vector": "NETWORK"
  },
  "impact": {
    "availability": "NONE",
    "confidentiality": "PARTIAL",
    "integrity": "NONE"
  },
  "cvss": 4.3,
  "exploitabilityScore": 8.6,
  "impactScore": 2.9,
  "cvss-vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
  "references": [
    "https://github.com/sshnet/SSH.NET/blob/bc99ada7da3f05f50d9379f2644941d91d5bf05a/src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs#L51",
    "https://github.com/sshnet/SSH.NET/commit/03c6d60736b8f7b42e44d6989a53f9b644a091fb",
    "https://github.com/sshnet/SSH.NET/releases/tag/2020.0.2",
    "https://github.com/sshnet/SSH.NET/security/advisories/GHSA-72p8-v4hg-v45p"
  ],
  "vulnerable_configuration": [],
  "vulnerable_product": [],
  "vendors": [],
  "products": [],
  "vulnerable_product_stems": [],
  "vulnerable_configuration_stems": [],
  "cwe": "CWE-338",
  "vulnerable_configuration_cpe_2_2": []
}