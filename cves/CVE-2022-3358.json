{
  "id": "CVE-2022-3358",
  "assigner": "openssl-security@openssl.org",
  "Published": "2022-10-11T13:15:10.233Z",
  "Modified": "2022-12-13T19:44:06.98Z",
  "last-modified": "2022-12-13T19:44:06.98Z",
  "summary": "OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation function will match the NULL cipher as being equivalent and will fetch this from the available providers. This will succeed if the default provider has been loaded (or if a third party provider has been loaded that offers this cipher). Using the NULL cipher means that the plaintext is emitted as the ciphertext. Applications are only affected by this issue if they call EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an encryption/decryption initialisation function. Applications that only use SSL/TLS are not impacted by this issue. Fixed in OpenSSL 3.0.6 (Affected 3.0.0-3.0.5).",
  "access": {
    "authentication": null,
    "complexity": null,
    "vector": null
  },
  "impact": {
    "availability": null,
    "confidentiality": null,
    "integrity": null
  },
  "cvss": null,
  "exploitabilityScore": null,
  "impactScore": null,
  "cvss-vector": null,
  "references": [
    "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=5485c56679d7c49b96e8fc8ca708b0b7e7c03c4b",
    "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023",
    "https://security.netapp.com/advisory/ntap-20221028-0014/",
    "https://www.openssl.org/news/secadv/20221011.txt"
  ],
  "vulnerable_configuration": [
    "cpe:2.3:a:openssl:openssl:3.0.0:-:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha1:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha10:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha11:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha12:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha13:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha14:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha15:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha16:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha17:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha2:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha3:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha4:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha5:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha6:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha7:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha8:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha9:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:beta1:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:beta2:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.1:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.2:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.3:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.4:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.5:*:*:*:*:*:*:*"
  ],
  "vulnerable_product": [
    "cpe:2.3:a:openssl:openssl:3.0.0:-:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha1:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha10:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha11:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha12:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha13:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha14:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha15:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha16:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha17:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha2:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha3:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha4:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha5:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha6:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha7:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha8:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:alpha9:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:beta1:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.0:beta2:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.1:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.2:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.3:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.4:*:*:*:*:*:*:*",
    "cpe:2.3:a:openssl:openssl:3.0.5:*:*:*:*:*:*:*"
  ],
  "vendors": [
    "openssl"
  ],
  "products": [
    "openssl"
  ],
  "vulnerable_product_stems": [
    "cpe:2.3:a:openssl:openssl"
  ],
  "vulnerable_configuration_stems": [
    "cpe:2.3:a:openssl:openssl"
  ],
  "cwe": "CWE-476",
  "vulnerable_configuration_cpe_2_2": []
}